my_data$phage11 <- sapply(strsplit(as.character(my_data$X2),' '), "[",11)
my_data$phage12 <- sapply(strsplit(as.character(my_data$X2),' '), "[",12)
my_data <- my_data[c(1,3:14)]
#names(my_data)[names(my_data) == "X1"] <- "genome"
View(my_data)
# looking at sequence lengths of the phages
my_data <- read_csv("./lytic/z_count_length.txt",col_names = FALSE)
View(my_data)
library(tidyverse)
# looking at sequence lengths of the phages
my_data <- read_csv("./lytic/z_count_length.txt",col_names = FALSE)
head(my_data)
my_data %>% remove_rownames %>% column_to_rownames(var="X1")
View(my_data)
my_data %>% column_to_rownames(var="X1")
View(my_data)
# looking at sequence lengths of the phages
my_data <- read_csv("./lytic/z_count_length.txt",col_names = FALSE)
my_data %>% column_to_rownames(var="X1")
my_data <- my_data %>% column_to_rownames(var="X1")
View(my_data)
# separate X2 into many columns
my_data$phage1 <- sapply(strsplit(as.character(my_data$X2),' '), "[",1)
my_data$phage2 <- sapply(strsplit(as.character(my_data$X2),' '), "[",2)
my_data$phage3 <- sapply(strsplit(as.character(my_data$X2),' '), "[",3)
my_data$phage4 <- sapply(strsplit(as.character(my_data$X2),' '), "[",4)
my_data$phage5 <- sapply(strsplit(as.character(my_data$X2),' '), "[",5)
my_data$phage6 <- sapply(strsplit(as.character(my_data$X2),' '), "[",6)
my_data$phage7 <- sapply(strsplit(as.character(my_data$X2),' '), "[",7)
my_data$phage8 <- sapply(strsplit(as.character(my_data$X2),' '), "[",8)
my_data$phage9 <- sapply(strsplit(as.character(my_data$X2),' '), "[",9)
my_data$phage10 <- sapply(strsplit(as.character(my_data$X2),' '), "[",10)
my_data$phage11 <- sapply(strsplit(as.character(my_data$X2),' '), "[",11)
my_data$phage12 <- sapply(strsplit(as.character(my_data$X2),' '), "[",12)
View(my_data)
my_data <- my_data[c(2:13)]
View(my_data)
max(my_data, na.rm=TRUE)
hist(my_data)
hist(my_data$phage1)
df1<−lapply(mydata,as.numeric)
df1 <− lapply(mydata,as.numeric)
df1 <- lapply(mydata,as.numeric)
df1 <- lapply(my_data,as.numeric)
max(df1)
max(df1$phage1)
max(df1, na.rm=TRUE)
max(my_data, na.rm=TRUE)
max(df1, na.rm=TRUE)
# n50 for 1,534 Germany Pseudomonas genomes
n50 <- read.table("../phage_sequence_lengths/n50.txt",sep = " ")
library(tidyverse)
# looking at sequence lengths of the phages
my_data <- read_csv("./count_length.txt",col_names = FALSE)
View(my_data)
my_data$phage1 <- sapply(strsplit(as.character(my_data$X2),' '), "[",1)
my_data$phage2 <- sapply(strsplit(as.character(my_data$X2),' '), "[",2)
my_data$phage3 <- sapply(strsplit(as.character(my_data$X2),' '), "[",3)
my_data$phage4 <- sapply(strsplit(as.character(my_data$X2),' '), "[",4)
my_data$phage5 <- sapply(strsplit(as.character(my_data$X2),' '), "[",5)
my_data$phage6 <- sapply(strsplit(as.character(my_data$X2),' '), "[",6)
my_data$phage7 <- sapply(strsplit(as.character(my_data$X2),' '), "[",7)
my_data$phage8 <- sapply(strsplit(as.character(my_data$X2),' '), "[",8)
my_data$phage9 <- sapply(strsplit(as.character(my_data$X2),' '), "[",9)
my_data$phage10 <- sapply(strsplit(as.character(my_data$X2),' '), "[",10)
my_data$phage11 <- sapply(strsplit(as.character(my_data$X2),' '), "[",11)
my_data$phage12 <- sapply(strsplit(as.character(my_data$X2),' '), "[",12)
my_data$phage13 <- sapply(strsplit(as.character(my_data$X2),' '), "[",13)
my_data$phage14 <- sapply(strsplit(as.character(my_data$X2),' '), "[",14)
my_data$phage15 <- sapply(strsplit(as.character(my_data$X2),' '), "[",15)
my_data$phage16 <- sapply(strsplit(as.character(my_data$X2),' '), "[",16)
my_data$phage17 <- sapply(strsplit(as.character(my_data$X2),' '), "[",17)
my_data$phage18 <- sapply(strsplit(as.character(my_data$X2),' '), "[",18)
my_data <- my_data[c(1,3:20)]
names(my_data)[names(my_data) == "X1"] <- "genome"
max(my_data$X1) # max is 431326
View(my_data)
# looking at sequence lengths of the phages
my_data <- read_csv("./count_length.txt",col_names = FALSE)
max(my_data$X1) # max is 431326
View(my_data)
max(my_data$X2) # max is 431326
max(my_data) # max is 431326
library(tidyverse)
# looking at sequence lengths of the phages
my_data <- read_csv("./lytic/z_count_length.txt",col_names = FALSE)
head(my_data)
my_data <- my_data %>% column_to_rownames(var="X1")
View(my_data)
max(my_data)
my_data$phage1 <- sapply(strsplit(as.character(my_data$X2),' '), "[",1)
my_data$phage2 <- sapply(strsplit(as.character(my_data$X2),' '), "[",2)
my_data$phage3 <- sapply(strsplit(as.character(my_data$X2),' '), "[",3)
my_data$phage4 <- sapply(strsplit(as.character(my_data$X2),' '), "[",4)
my_data$phage5 <- sapply(strsplit(as.character(my_data$X2),' '), "[",5)
my_data$phage6 <- sapply(strsplit(as.character(my_data$X2),' '), "[",6)
my_data$phage7 <- sapply(strsplit(as.character(my_data$X2),' '), "[",7)
my_data$phage8 <- sapply(strsplit(as.character(my_data$X2),' '), "[",8)
my_data$phage9 <- sapply(strsplit(as.character(my_data$X2),' '), "[",9)
my_data$phage10 <- sapply(strsplit(as.character(my_data$X2),' '), "[",10)
my_data$phage11 <- sapply(strsplit(as.character(my_data$X2),' '), "[",11)
my_data$phage12 <- sapply(strsplit(as.character(my_data$X2),' '), "[",12)
View(my_data)
my_data <- my_data[c(2:13)]
df1 <- lapply(my_data,as.numeric)
max(df1$phage1)
max(df1)
colMax <- function(my_data) sapply(my_data, max, na.rm = TRUE)
View(colMax)
colMax(my_data)
# min value
colMin <- function(my_data) sapply(my_data, min, na.rm = TRUE)
colMin(my_data) # largest 'lytic' phage is 9,477
View(my_data)
max(my_data$phage1)
min(my_data$phage1)
# max value
colMax <- function(data) sapply(data, max, na.rm = TRUE)
colMax(df1) # largest 'lytic' phage is 9,477
# max value
apply(df1, 2, function(x) max(x, na.rm = TRUE))
# max value
library(dplyr)
summarise_each(df1, funs(max(., na.rm=TRUE)))
summarise_each(my_data, funs(max(., na.rm=TRUE)))
# max value
max(df1$phage1)
colMax <- function(data) sapply(data, max, na.rm = TRUE)
colMax(df1) # largest 'lytic' phage is 9,477
# min value
colMin <- function(data) sapply(data, min, na.rm = TRUE)
colMin(df1) # largest 'lytic' phage is 9,477
# plot histogram of sequence lengths
hist(df1)
# plot histogram of sequence lengths
hist(df1$phage1)
library(tidyr)
dat <- read_csv("./lytic/z_count_length.txt",col_names = FALSE)
df = separate_rows(dat,1,sep = " ")
View(df)
View(dat)
data.frame(X2 = unlist(strsplit(as.character(dat$X2), " , ")))
data.frame(X2 = unlist(strsplit(as.character(dat$X2), " ")))
dat2 <- data.frame(X2 = unlist(strsplit(as.character(dat$X2), " ")))
View(dat2)
hist(dat2)
View(dat2)
dat2 <- as.numeric(dat2)
dat2 <- data.frame(X2 = unlist(strsplit(dat$X2), " "))
dat2 <- data.frame(X2 = unlist(strsplit(as.numeric(dat$X2), " ")))
dat2 <- data.frame(X2 = unlist(strsplit(as.character(dat$X2), " ")))
dat2 <- lapply(dat2,as.numeric)
hist(dat2)
View(dat2)
dat <- read_csv("./lytic/z_count_length.txt",col_names = FALSE)
dat2 <- data.frame(X2 = unlist(strsplit(as.character(dat$X2), " ")))
dat2 <- lapply(dat2$X2,as.numeric)
hist(dat2)
View(dat2)
dat <- read_csv("./lytic/z_count_length.txt",col_names = FALSE)
dat2 <- data.frame(X2 = unlist(strsplit(as.character(dat$X2), " ")))
View(dat2)
dat3 <- lapply(dat2,as.numeric)
View(dat3)
dat3 <- as.data.frame(dat3)
View(dat3)
hist(dat3)
View(dat3)
ggplot(dat3, aes(x=X2)) + geom_histogram()
# looking at sequence lengths of the phages
my_data <- read_csv("./lysogenic/z_lysogenic_count_length.txt",col_names = FALSE)
head(my_data)
my_data <- my_data %>% column_to_rownames(var="X1")
# plot histogram of reads we see
dat <- read_csv("./lytic/z_count_length.txt",col_names = FALSE)
dat2 <- data.frame(X2 = unlist(strsplit(as.character(dat$X2), " ")))
dat3 <- lapply(dat2,as.numeric)
dat3 <- as.data.frame(dat3)
ggplot(dat3, aes(x=X2)) + geom_histogram()
# plot histogram of reads we see
dat <- read_csv("./lysogenic/z_lysogenic_count_length.txt",col_names = FALSE)
dat2 <- data.frame(X2 = unlist(strsplit(as.character(dat$X2), " ")))
dat3 <- lapply(dat2,as.numeric)
dat3 <- as.data.frame(dat3)
ggplot(dat3, aes(x=X2)) + geom_histogram()
my_data <- read_csv("./lysogenic/z_lysogenic_count_length.txt",col_names = FALSE)
head(my_data)
my_data <- my_data %>% column_to_rownames(var="X1")
# separate X2 into many columns
my_data$phage1 <- sapply(strsplit(as.character(my_data$X2),' '), "[",1)
my_data$phage2 <- sapply(strsplit(as.character(my_data$X2),' '), "[",2)
my_data$phage3 <- sapply(strsplit(as.character(my_data$X2),' '), "[",3)
my_data$phage4 <- sapply(strsplit(as.character(my_data$X2),' '), "[",4)
my_data$phage5 <- sapply(strsplit(as.character(my_data$X2),' '), "[",5)
my_data$phage6 <- sapply(strsplit(as.character(my_data$X2),' '), "[",6)
my_data$phage7 <- sapply(strsplit(as.character(my_data$X2),' '), "[",7)
my_data$phage8 <- sapply(strsplit(as.character(my_data$X2),' '), "[",8)
my_data$phage9 <- sapply(strsplit(as.character(my_data$X2),' '), "[",9)
my_data$phage10 <- sapply(strsplit(as.character(my_data$X2),' '), "[",10)
my_data$phage11 <- sapply(strsplit(as.character(my_data$X2),' '), "[",11)
my_data$phage12 <- sapply(strsplit(as.character(my_data$X2),' '), "[",12)
my_data <- my_data[c(2:13)]
#names(my_data)[names(my_data) == "X1"] <- "genome"
df1 <- lapply(my_data,as.numeric)
# max value
colMax <- function(data) sapply(data, max, na.rm = TRUE)
colMax(df1) # largest 'lytic' phage is 47,431
# min value
colMin <- function(data) sapply(data, min, na.rm = TRUE)
colMin(df1) # smallest 'lytic' phage is 1,014
ggplot(dat3, aes(x=X2)) + geom_histogram()
?geom_histogram
ggplot(dat3, aes(x=X2)) + geom_histogram(binwidth = 500)
ggplot(dat3, aes(x=X2)) + geom_histogram()
small_df <- subset(dat3, X1<34000)
View(dat3)
small_df <- subset(dat3, X2<34000)
big_df <- subset(dat3,X2>=34000)
hist(small_df)
hist(big_df)
hist(dat3)
hist(dat3$X2)
ggplot(dat3, aes(x=X2)) + geom_histogram() #+ xlim(3900, )
ggplot(dat3, aes(x=X2)) + geom_histogram() + xlim(3900,100000)
ggplot(dat3, aes(x=X2)) + geom_histogram() + xlim(100000,432000)
# looking at sequence lengths of the phages
my_data <- read_csv("./count_length.txt",col_names = FALSE)
library(tidyverse)
# looking at sequence lengths of the phages
my_data <- read_csv("./count_length.txt",col_names = FALSE)
# looking at sequence lengths of the phages
my_data <- read_csv("./combined/count_length.txt",col_names = FALSE)
# separate X2 into many columns
my_data$phage1 <- sapply(strsplit(as.character(my_data$X2),' '), "[",1)
my_data$phage2 <- sapply(strsplit(as.character(my_data$X2),' '), "[",2)
my_data$phage3 <- sapply(strsplit(as.character(my_data$X2),' '), "[",3)
my_data$phage4 <- sapply(strsplit(as.character(my_data$X2),' '), "[",4)
my_data$phage5 <- sapply(strsplit(as.character(my_data$X2),' '), "[",5)
my_data$phage6 <- sapply(strsplit(as.character(my_data$X2),' '), "[",6)
my_data$phage7 <- sapply(strsplit(as.character(my_data$X2),' '), "[",7)
my_data$phage8 <- sapply(strsplit(as.character(my_data$X2),' '), "[",8)
my_data$phage9 <- sapply(strsplit(as.character(my_data$X2),' '), "[",9)
my_data$phage10 <- sapply(strsplit(as.character(my_data$X2),' '), "[",10)
my_data$phage11 <- sapply(strsplit(as.character(my_data$X2),' '), "[",11)
my_data$phage12 <- sapply(strsplit(as.character(my_data$X2),' '), "[",12)
my_data$phage13 <- sapply(strsplit(as.character(my_data$X2),' '), "[",13)
my_data$phage14 <- sapply(strsplit(as.character(my_data$X2),' '), "[",14)
my_data$phage15 <- sapply(strsplit(as.character(my_data$X2),' '), "[",15)
my_data$phage16 <- sapply(strsplit(as.character(my_data$X2),' '), "[",16)
my_data$phage17 <- sapply(strsplit(as.character(my_data$X2),' '), "[",17)
my_data$phage18 <- sapply(strsplit(as.character(my_data$X2),' '), "[",18)
my_data <- my_data[c(1,3:20)]
names(my_data)[names(my_data) == "X1"] <- "genome"
View(my_data)
# subset data to only the 15,000 bp phage
dat <- read_csv("./combined/count_length.txt",col_names = FALSE)
dat2 <- data.frame(X2 = unlist(strsplit(as.character(dat$X2), " ")))
dat3 <- lapply(dat2,as.numeric)
dat3 <- as.data.frame(dat3)
View(dat3)
View(dat2)
View(dat)
View(my_data)
View(my_data)
# subset data to only the 15,000 bp phage
df = my_data[(my_data['phage1'] >= 15000) & (my_data['phage1'] <= 16000)]
# subset data to only the 15,000 bp phage
df = my_data[(my_data$phage1 >= 15000) & (my_data$phage1 <= 16000)]
df <- subset(my_data$phage1 >= 15000 & my_data$phage1 <= 16000)
df <- subset(my_data$phage1 >= 15000)
df <- subset(my_data, phage1 >= 15000)
df <- subset(df, phage1 <= 16000)
View(df)
View(df)
test <- subset(my_data, phage2 >=15000)
View(test)
test <- subset(test, phage2 <= 16000)
# looking at sequence lengths of the phages
my_data <- read_csv("./combined/count_length.txt",col_names = FALSE)
View(my_data)
# looking at sequence lengths of the phages
my_data <- read_csv("./combined/count_length.txt",col_names = FALSE)
View(my_data)
# make a new df split by the space between each number in column 2
dat <- read_csv("./combined/count_length.txt",col_names = FALSE)
dat2 <- data.frame(X2 = unlist(strsplit(as.character(dat$X2), " ")))
View(dat2)
View(dat)
dat <- dat %>% column_to_rownames(var="X1")
View(dat)
dat2 <- data.frame(X2 = unlist(strsplit(as.character(dat$X2), " ")))
View(dat2)
dat %>%
mutate(X2=strsplit(name, " ")) %>%
unnest(X2)
dat %>%
mutate(X2=strsplit(X2, " ")) %>%
unnest(X2)
dat2 <- dat %>%
mutate(X2=strsplit(X2, " ")) %>%
unnest(X2)
View(dat2)
dat %>%
separate_rows(X2)
dat2 <- dat %>%
separate_rows(X2)
View(dat2)
s <- strsplit(dat$X2, split = " ")
View(s)
# make a new df split by the space between each number in column 2
dat <- read_csv("./combined/count_length.txt",col_names = FALSE)
View(dat)
data.frame(X1 = rep(dat$X1, sapply(s, length)), X2 = unlist(s))
dat2 <- data.frame(X1 = rep(dat$X1, sapply(s, length)), X2 = unlist(s))
View(dat2)
hist(dat2)
View(dat2)
hist(dat2$X2)
ggplot(dat2, aes(x=X2)) + geom_histogram()
ggplot(dat2, aes(x=X2)) + geom_histogram(stat = "count")
ggplot(dat2, aes(x=X2)) + geom_histogram(stat = "count")
max(dat2$X2)
max(dat2$X2, na.rm = TRUE)
min(dat2$X2, na.rm = TRUE)
# subset to only genomes with 15,000-16,000 bp
15kb <- subsset(dat2, X2 >= 15000)
# subset to only genomes with 15,000-16,000 bp
15_kb <- subsset(dat2, X2 >= 15000)
# subset to only genomes with 15,000-16,000 bp
phages_15kb <- subsset(dat2, X2 >= 15000)
# subset to only genomes with 15,000-16,000 bp
phages_15kb <- subset(dat2, X2 >= 15000)
View(phages_15kb)
phages_15kb <- subset(phages_15kb, X2 <= 16000)
View(phages_15kb)
write.csv(phages_15kb, "./combined/15kb_phages_combined.csv")
write_csv(phages_15kb, "./combined/15kb_phages_combined.csv")
library(tidyverse)
# looking at sequence lengths of the phages
my_data <- read_csv("./combined/count_length.txt",col_names = FALSE)
# make a new df split by the space between each number in column 2
dat <- read_csv("./combined/count_length.txt",col_names = FALSE)
s <- strsplit(dat$X2, split = " ")
dat2 <- data.frame(X1 = rep(dat$X1, sapply(s, length)), X2 = unlist(s))
# subset to only genomes with 15,000-16,000 bp
phages_15kb <- subset(dat2, X2 >= 15000)
phages_15kb <- subset(phages_15kb, X2 <= 16000)
View(phages_15kb)
# n50 for 1,534 Germany Pseudomonas genomes
n50 <- read.table("../phage_sequence_lengths/n50.txt",sep = " ")
# n50 for 1,534 Germany Pseudomonas genomes
n50 <- read.table("./pseudomonas_n50//n50.txt",sep = " ")
# n50 for 1,534 Germany Pseudomonas genomes
n50 <- read.table("./pseudomonas_n50/n50.txt",sep = " ")
View(n50)
# subset to only n50 values
n50_df <- n50[c(1,19)]
View(n50_df)
# rename columns
names(n50_df)[names(n50_df) == "V19"] <- "n50_score"
names(n50_df)[names(n50_df) == "V1"] <- "genome"
View(n50_df)
mean(n50_df$n50_score) # 135.7041
min(n50_df$n50_score) # 15
max(n50_df$n50_score) # 5666
hist(n50_df$n50_score)
# look at n50 of all "genomes with no phages" and "OTU5 without a cluster2 phage"
nophages <- subset(n50_df, genome==c("plate22.D2.pilon.contigs_renamed.fasta","plate22.D5.pilon.contigs_renamed.fasta",
"plate22.D7.pilon.contigs_renamed.fasta","plate23.D8.pilon.contigs_renamed.fasta",
"plate26.F6.pilon.contigs_renamed.fasta","plate26.F7.pilon.contigs_renamed.fasta",
"plate2.H2.pilon.contigs_renamed.fasta","plate6.H5.pilon.contigs_renamed.fasta",
"plate7.G9.pilon.contigs_renamed.fasta","plate9.H9.pilon.contigs_renamed.fasta",
"plate22.D8.pilon.contigs_renamed.fasta"))
View(nophages)
# look at n50 of all "genomes with no phages" and "OTU5 without a cluster2 phage"
nophages <- subset(n50_df, genome = c("plate22.D2.pilon.contigs_renamed.fasta","plate22.D5.pilon.contigs_renamed.fasta",
"plate22.D7.pilon.contigs_renamed.fasta","plate23.D8.pilon.contigs_renamed.fasta",
"plate26.F6.pilon.contigs_renamed.fasta","plate26.F7.pilon.contigs_renamed.fasta",
"plate2.H2.pilon.contigs_renamed.fasta","plate6.H5.pilon.contigs_renamed.fasta",
"plate7.G9.pilon.contigs_renamed.fasta","plate9.H9.pilon.contigs_renamed.fasta",
"plate22.D8.pilon.contigs_renamed.fasta"))
View(nophages)
# look at n50 of all "genomes with no phages" and "OTU5 without a cluster2 phage"
nophages <- subset(n50_df, genome == c("plate22.D2.pilon.contigs_renamed.fasta","plate22.D5.pilon.contigs_renamed.fasta",
"plate22.D7.pilon.contigs_renamed.fasta","plate23.D8.pilon.contigs_renamed.fasta",
"plate26.F6.pilon.contigs_renamed.fasta","plate26.F7.pilon.contigs_renamed.fasta",
"plate2.H2.pilon.contigs_renamed.fasta","plate6.H5.pilon.contigs_renamed.fasta",
"plate7.G9.pilon.contigs_renamed.fasta","plate9.H9.pilon.contigs_renamed.fasta",
"plate22.D8.pilon.contigs_renamed.fasta"))
View(nophages)
nophages <- c("plate22.D2.pilon.contigs_renamed.fasta","plate22.D5.pilon.contigs_renamed.fasta",
"plate22.D7.pilon.contigs_renamed.fasta","plate23.D8.pilon.contigs_renamed.fasta",
"plate26.F6.pilon.contigs_renamed.fasta","plate26.F7.pilon.contigs_renamed.fasta",
"plate2.H2.pilon.contigs_renamed.fasta","plate6.H5.pilon.contigs_renamed.fasta",
"plate7.G9.pilon.contigs_renamed.fasta","plate9.H9.pilon.contigs_renamed.fasta",
"plate22.D8.pilon.contigs_renamed.fasta")
subset(n50_df, genome == nophages)
nophages_df <- subset(n50_df, genome == nophages)
View(nophages_df)
# look at n50 of all "genomes with no phages" and "OTU5 without a cluster2 phage"
nophages <- subset(n50_df, genome == c("plate22.D2.pilon.contigs_renamed.fasta","plate22.D5.pilon.contigs_renamed.fasta",
"plate22.D7.pilon.contigs_renamed.fasta","plate23.D8.pilon.contigs_renamed.fasta",
"plate26.F6.pilon.contigs_renamed.fasta","plate26.F7.pilon.contigs_renamed.fasta",
"plate2.H2.pilon.contigs_renamed.fasta","plate6.H5.pilon.contigs_renamed.fasta",
"plate7.G9.pilon.contigs_renamed.fasta","plate9.H9.pilon.contigs_renamed.fasta",
"plate22.D8.pilon.contigs_renamed.fasta"))
nophages1 <- subset(n50_df, genome == "plate22.D2.pilon.contigs_renamed.fasta")
View(nophages1)
myvars <- c("plate22.D2.pilon.contigs_renamed.fasta","plate22.D5.pilon.contigs_renamed.fasta",
"plate22.D7.pilon.contigs_renamed.fasta","plate23.D8.pilon.contigs_renamed.fasta",
"plate26.F6.pilon.contigs_renamed.fasta","plate26.F7.pilon.contigs_renamed.fasta",
"plate2.H2.pilon.contigs_renamed.fasta","plate6.H5.pilon.contigs_renamed.fasta",
"plate7.G9.pilon.contigs_renamed.fasta","plate9.H9.pilon.contigs_renamed.fasta",
"plate22.D8.pilon.contigs_renamed.fasta")
newdata <- n50_df[myvars]
nophages <- subset(n50_df, genome == "plate22.D2.pilon.contigs_renamed.fasta" | genome == "plate22.D5.pilon.contigs_renamed.fasta")
View(nophages)
nophages <- subset(n50_df, genome == "plate22.D2.pilon.contigs_renamed.fasta" | genome == "plate22.D5.pilon.contigs_renamed.fasta" |
genome == "plate22.D7.pilon.contigs_renamed.fasta" | genome == "plate23.D8.pilon.contigs_renamed.fasta" | genome ==
"plate26.F6.pilon.contigs_renamed.fasta" | genome == "plate26.F7.pilon.contigs_renamed.fasta" | genome ==
"plate2.H2.pilon.contigs_renamed.fasta" | genome == "plate6.H5.pilon.contigs_renamed.fasta" | genome ==
"plate7.G9.pilon.contigs_renamed.fasta" | genome == "plate9.H9.pilon.contigs_renamed.fasta")
View(nophages)
nophages <- subset(n50_df, genome == "plate22.D2.pilon.contigs_renamed.fasta" | genome == "plate22.D5.pilon.contigs_renamed.fasta" |
genome == "plate22.D7.pilon.contigs_renamed.fasta" | genome == "plate23.D8.pilon.contigs_renamed.fasta" | genome ==
"plate26.F6.pilon.contigs_renamed.fasta" | genome == "plate26.F7.pilon.contigs_renamed.fasta" | genome ==
"plate2.H2.pilon.contigs_renamed.fasta" | genome == "plate6.H5.pilon.contigs_renamed.fasta" | genome ==
"plate7.G9.pilon.contigs_renamed.fasta" | genome == "plate9.H9.pilon.contigs_renamed.fasta" | genome ==
"plate22.D8.pilon.contigs_renamed.fasta")
View(nophages)
hist(nophages$n50_score)
nocluster2phage <- subset(n50_df, genome == "plate23.D7.pilon.contigs_renamed.fasta")
hist(nocluster2phage$n50_score)
ggplot(nocluster2phage, aes(x=genome, y=n50_score))
library(ggplot2)
ggplot(nocluster2phage, aes(x=genome, y=n50_score))
ggplot(nocluster2phage, aes(x=genome, y=n50_score)) + geom_bar()
ggplot(nocluster2phage, aes(x=genome)) + geom_bar()
ggplot(nocluster2phage, aes(x=genome)) + geom_point()
ggplot(nocluster2phage, aes(x=genome, y=n50_score)) + geom_point()
View(nophages)
View(nocluster2phage)
library(tidyverse)
library(tidyr)
# looking at sequence lengths of the phages
my_data <- read_csv("./lysogenic/z_lysogenic_count_length.txt",col_names = FALSE)
head(my_data)
my_data <- my_data %>% column_to_rownames(var="X1")
# separate X2 into many columns
my_data$phage1 <- sapply(strsplit(as.character(my_data$X2),' '), "[",1)
my_data$phage2 <- sapply(strsplit(as.character(my_data$X2),' '), "[",2)
my_data$phage3 <- sapply(strsplit(as.character(my_data$X2),' '), "[",3)
my_data$phage4 <- sapply(strsplit(as.character(my_data$X2),' '), "[",4)
my_data$phage5 <- sapply(strsplit(as.character(my_data$X2),' '), "[",5)
my_data$phage6 <- sapply(strsplit(as.character(my_data$X2),' '), "[",6)
my_data$phage7 <- sapply(strsplit(as.character(my_data$X2),' '), "[",7)
my_data$phage8 <- sapply(strsplit(as.character(my_data$X2),' '), "[",8)
my_data$phage9 <- sapply(strsplit(as.character(my_data$X2),' '), "[",9)
my_data$phage10 <- sapply(strsplit(as.character(my_data$X2),' '), "[",10)
my_data$phage11 <- sapply(strsplit(as.character(my_data$X2),' '), "[",11)
my_data$phage12 <- sapply(strsplit(as.character(my_data$X2),' '), "[",12)
my_data <- my_data[c(2:13)]
#names(my_data)[names(my_data) == "X1"] <- "genome"
df1 <- lapply(my_data,as.numeric)
# max value
colMax <- function(data) sapply(data, max, na.rm = TRUE)
colMax(df1) # largest 'lysogenic' phage is 431,272
# min value
colMin <- function(data) sapply(data, min, na.rm = TRUE)
colMin(df1) # smallest 'lysogenic' phage is 3,933
# plot histogram of reads we see
dat <- read_csv("./lysogenic/z_lysogenic_count_length.txt",col_names = FALSE)
dat2 <- data.frame(X2 = unlist(strsplit(as.character(dat$X2), " ")))
dat3 <- lapply(dat2,as.numeric)
dat3 <- as.data.frame(dat3)
hist(dat3$X2)
ggplot(dat3, aes(x=X2)) + geom_histogram() + xlim(3900,100000)
ggplot(dat3, aes(x=X2)) + geom_histogram() + xlim(100000,432000)
colMax(df1) # largest 'lysogenic' phage is 431,272
View(df1)
View(my_data)
colMax(my_data$2)
colMax(my_data$phage2)
max(my_data$phage2)
library(tidyverse)
library(tidyr)
# looking at sequence lengths of the phages
my_data <- read_csv("./lysogenic/z_lysogenic_count_length.txt",col_names = FALSE)
head(my_data)
my_data <- my_data %>% column_to_rownames(var="X1")
View(my_data)
# separate X2 into many columns
my_data$phage1 <- sapply(strsplit(as.character(my_data$X2),' '), "[",1)
my_data$phage2 <- sapply(strsplit(as.character(my_data$X2),' '), "[",2)
my_data$phage3 <- sapply(strsplit(as.character(my_data$X2),' '), "[",3)
my_data$phage4 <- sapply(strsplit(as.character(my_data$X2),' '), "[",4)
my_data$phage5 <- sapply(strsplit(as.character(my_data$X2),' '), "[",5)
my_data$phage6 <- sapply(strsplit(as.character(my_data$X2),' '), "[",6)
my_data$phage7 <- sapply(strsplit(as.character(my_data$X2),' '), "[",7)
my_data$phage8 <- sapply(strsplit(as.character(my_data$X2),' '), "[",8)
my_data$phage9 <- sapply(strsplit(as.character(my_data$X2),' '), "[",9)
my_data$phage10 <- sapply(strsplit(as.character(my_data$X2),' '), "[",10)
my_data$phage11 <- sapply(strsplit(as.character(my_data$X2),' '), "[",11)
my_data$phage12 <- sapply(strsplit(as.character(my_data$X2),' '), "[",12)
View(my_data)
my_data <- my_data[c(2:13)]
View(my_data)
subset(my_data, phage2==431,272)
big_phage <- subset(my_data, phage2=="431,272")
View(big_phage)
big_phage <- subset(my_data, phage2=="431272")
View(big_phage)
