df5.1 <- as.matrix(df5.1)
df6.1 <- as.matrix(df6.1)
df7.1 <- as.matrix(df7.1)
df8.1 <- as.matrix(df8.1)
df9.1 <- as.matrix(df9.1)
df10.1 <- as.matrix(df10.1)
# heatmaps
# visualize the mash distance within a cluster
image(df1.1)
image(df2.1)
image(df3.1)
image(df4.1)
image(df5.1)
View(df5.1)
View(df5)
View(df5)
df5 <- subset(fragmented_cluster_info, p4.cluster==5)
View(fragmented_cluster_info)
# cleaning the cluster data
# make p1 into a data frame to see if we can map the values to a phylogeny
clusters <- data.frame(p1$cluster)
fragmented_cluster_info <- data.frame(p1$cluster)
clusters$genome_ID <- row.names(clusters)
clusters[] <- lapply(clusters, gsub, pattern='late', replacement='')
clusters$genome_ID <- gsub("^.{0,4}", "", clusters$genome_ID)
clusters[] <- lapply(clusters, gsub, pattern='.pilon.contigs_renamed.phages_lysogenic.fas', replacement='')
rownames(clusters) <- NULL
clusters <- clusters[,c(2,1)]
# Add a column to clusters: Phage #
clusters['phages'] <- NA
df <- clusters %>% group_by(genome_ID) %>% dplyr::mutate(phages = row_number())
df10 <- subset(fragmented_cluster_info, p4.cluster==10)
df9 <- subset(fragmented_cluster_info, p4.cluster==9)
df8 <- subset(fragmented_cluster_info, p4.cluster==8)
df7 <- subset(fragmented_cluster_info, p4.cluster==7)
df6 <- subset(fragmented_cluster_info, p4.cluster==6)
df5 <- subset(fragmented_cluster_info, p4.cluster==5)
df4 <- subset(fragmented_cluster_info, p4.cluster==4)
df3 <- subset(fragmented_cluster_info, p4.cluster==3)
df2 <- subset(fragmented_cluster_info, p4.cluster==2)
df1 <- subset(fragmented_cluster_info, p4.cluster==1)
# subset each mash distance matrix to its own cluster
df1.1 <- tbl[rownames(tbl) %in% rownames(df1), rownames(tbl) %in% rownames(df1)]
df2.1 <- tbl[rownames(tbl) %in% rownames(df2), rownames(tbl) %in% rownames(df2)]
df3.1 <- tbl[rownames(tbl) %in% rownames(df3), rownames(tbl) %in% rownames(df3)]
df4.1 <- tbl[rownames(tbl) %in% rownames(df4), rownames(tbl) %in% rownames(df4)]
df5.1 <- tbl[rownames(tbl) %in% rownames(df5), rownames(tbl) %in% rownames(df5)]
df6.1 <- tbl[rownames(tbl) %in% rownames(df6), rownames(tbl) %in% rownames(df6)]
df7.1 <- tbl[rownames(tbl) %in% rownames(df7), rownames(tbl) %in% rownames(df7)]
df8.1 <- tbl[rownames(tbl) %in% rownames(df8), rownames(tbl) %in% rownames(df8)]
df9.1 <- tbl[rownames(tbl) %in% rownames(df9), rownames(tbl) %in% rownames(df9)]
df10.1 <- tbl[rownames(tbl) %in% rownames(df10), rownames(tbl) %in% rownames(df10)]
# convert to data matrix
df1.1 <- as.matrix(df1.1)
df2.1 <- as.matrix(df2.1)
df3.1 <- as.matrix(df3.1)
df4.1 <- as.matrix(df4.1)
df5.1 <- as.matrix(df5.1)
df6.1 <- as.matrix(df6.1)
df7.1 <- as.matrix(df7.1)
df8.1 <- as.matrix(df8.1)
df9.1 <- as.matrix(df9.1)
df10.1 <- as.matrix(df10.1)
# heatmaps
# visualize the mash distance within a cluster
image(df1.1)
image(df2.1)
image(df3.1)
image(df4.1)
image(df5.1)
# load in the pseudomonas OTU5 phylogeny
treex2 <- read.tree(file="./ps_1524_uncollapsed_5_2018.nwk")
# cleaning the cluster data
# make p1 into a data frame to see if we can map the values to a phylogeny
clusters <- data.frame(p2$cluster)
fragmented_cluster_info <- data.frame(p2$cluster)
clusters$genome_ID <- row.names(clusters)
clusters[] <- lapply(clusters, gsub, pattern='late', replacement='')
clusters$genome_ID <- gsub("^.{0,4}", "", clusters$genome_ID)
clusters[] <- lapply(clusters, gsub, pattern='.pilon.contigs_renamed.phages_lysogenic.fas', replacement='')
rownames(clusters) <- NULL
clusters <- clusters[,c(2,1)]
# Add a column to clusters: Phage #
clusters['phages'] <- NA
df <- clusters %>% group_by(genome_ID) %>% dplyr::mutate(phages = row_number())
# analysis of phage data
# find largest # of phages in column phages
max(df$phages) # 8 is the maximum number of phages
ggplot(df, aes(x=phages)) + geom_histogram() + ggtitle("Phage distribution")
# cleaning the cluster data
# subset df based off phages column, rename their cluster column
df1 <- subset(df, phages == 1) #1582
names(df1)[2] <- "phage1"
df2 <- subset(df, phages == 2) # 884
names(df2)[2] <- "phage2"
# see how many times we see each genome_ID
#table(df$genome_ID)
# cleaning the tree
# remove rows in treex2 that aren't in df1 since that will have all genomes we need
uneeded <- which(!(treex2$tip.label) %in% df1$genome_ID)
length(uneeded)
tree <- drop.tip(treex2, uneeded)
# make comprehensive phage clustering dataframe with the corresponding genome as rownames
# make all 15 dataframes 1510 observations long but with NA in places that don't have values
all_df <- merge(df1, df2, by="genome_ID", all=TRUE)
# convert to matrix
all_df_matrix <- as.matrix(all_df)
rownames(all_df_matrix) <- all_df_matrix[,1]
all_df_matrix <- all_df_matrix[ ,c(2,4)]
#write.csv(all_df_matrix, "./lysogenic_ffn/lysogenic_circos_table.csv")
################################################################
############### plot clusters to phylogeny #####################
################################################################
p <- ggtree(tree, layout='circular', branch.length='none')
p
p3 <- gheatmap(p, all_df_matrix, colnames = FALSE, legend_title = "Cluster")
p3
#p3 + geom_strip('p9.C4','p4.C6', barsize = 2, color= 'blue', label = "Other Pseudomonads", offset = 80, offset.text=1) +
#geom_strip('p27.D6','p9.E8', barsize=2, color='purple',label='OTU5', offset=80, offset.text=1)
df2 <- subset(fragmented_cluster_info, p4.cluster==2)
df2 <- subset(fragmented_cluster_info, p2.cluster==2)
df1 <- subset(fragmented_cluster_info, p2.cluster==1)
# subset each mash distance matrix to its own cluster
df1.1 <- tbl[rownames(tbl) %in% rownames(df1), rownames(tbl) %in% rownames(df1)]
df2.1 <- tbl[rownames(tbl) %in% rownames(df2), rownames(tbl) %in% rownames(df2)]
# convert to data matrix
df1.1 <- as.matrix(df1.1)
df2.1 <- as.matrix(df2.1)
# heatmaps
# visualize the mash distance within a cluster
image(df1.1)
image(df2.1)
# heatmaps
# visualize the mash distance within a cluster
image(df1.1)
image(df1.1)
image(df2.1)
View(df1.1)
# load libraries
library(cluster)
library(NbClust)
library(clustertend)
library(factoextra)
library(stats)
library(ape)
library(phytools)
library(ggplot2)
library(ggtree)
library(tidyverse)
library(dplyr)
library(BBmisc)
# set the seed
set.seed(123)
# load and tidy phage data from mash
tbl <- read.table("./mash_cluster2_results",header=FALSE,row.names=1)
colnames(tbl) <- rownames(tbl)
p1 <- kmeans(tbl2, 10)
# plot k-means using 2 clusters (from elbow method)
tbl2 <- as.matrix(tbl)
p1 <- kmeans(tbl2, 10)
fviz_cluster(p1, data = tbl2, geom="point")
# load in the pseudomonas OTU5 phylogeny
treex2 <- read.tree(file="./ps_1524_uncollapsed_5_2018.nwk")
# cleaning the cluster data
# make p1 into a data frame to see if we can map the values to a phylogeny
clusters <- data.frame(p1$cluster)
fragmented_cluster_info <- data.frame(p1$cluster)
clusters$genome_ID <- row.names(clusters)
clusters[] <- lapply(clusters, gsub, pattern='late', replacement='')
clusters$genome_ID <- gsub("^.{0,4}", "", clusters$genome_ID)
clusters[] <- lapply(clusters, gsub, pattern='.pilon.contigs_renamed.phages_lysogenic.fas', replacement='')
rownames(clusters) <- NULL
clusters <- clusters[,c(2,1)]
# Add a column to clusters: Phage #
clusters['phages'] <- NA
df <- clusters %>% group_by(genome_ID) %>% dplyr::mutate(phages = row_number())
# analysis of phage data
# find largest # of phages in column phages
max(df$phages) # 8 is the maximum number of phages
ggplot(df, aes(x=phages)) + geom_histogram() + ggtitle("Phage distribution")
View(df)
# cleaning the cluster data
# subset df based off phages column, rename their cluster column
df1 <- subset(df, phages == 1) #1582
names(df1)[2] <- "phage1"
df2 <- subset(df, phages == 2) # 884
names(df2)[2] <- "phage2"
# see how many times we see each genome_ID
#table(df$genome_ID)
# cleaning the tree
# remove rows in treex2 that aren't in df1 since that will have all genomes we need
uneeded <- which(!(treex2$tip.label) %in% df1$genome_ID)
length(uneeded)
tree <- drop.tip(treex2, uneeded)
# make comprehensive phage clustering dataframe with the corresponding genome as rownames
# make all 15 dataframes 1510 observations long but with NA in places that don't have values
all_df <- merge(df1, df2, by="genome_ID", all=TRUE)
# convert to matrix
all_df_matrix <- as.matrix(all_df)
rownames(all_df_matrix) <- all_df_matrix[,1]
all_df_matrix <- all_df_matrix[ ,c(2,4)]
#write.csv(all_df_matrix, "./lysogenic_ffn/lysogenic_circos_table.csv")
################################################################
############### plot clusters to phylogeny #####################
################################################################
p <- ggtree(tree, layout='circular', branch.length='none')
p
p3 <- gheatmap(p, all_df_matrix, colnames = FALSE, legend_title = "Cluster")
p3
#p3 + geom_strip('p9.C4','p4.C6', barsize = 2, color= 'blue', label = "Other Pseudomonads", offset = 80, offset.text=1) +
#geom_strip('p27.D6','p9.E8', barsize=2, color='purple',label='OTU5', offset=80, offset.text=1)
df10 <- subset(fragmented_cluster_info, p4.cluster==10)
df10 <- subset(fragmented_cluster_info, p1.cluster==10)
df9 <- subset(fragmented_cluster_info, p1.cluster==9)
df8 <- subset(fragmented_cluster_info, p1.cluster==8)
df7 <- subset(fragmented_cluster_info, p1.cluster==7)
df6 <- subset(fragmented_cluster_info, p1.cluster==6)
df5 <- subset(fragmented_cluster_info, p1.cluster==5)
df4 <- subset(fragmented_cluster_info, p1.cluster==4)
df3 <- subset(fragmented_cluster_info, p1.cluster==3)
df2 <- subset(fragmented_cluster_info, p1.cluster==2)
df1 <- subset(fragmented_cluster_info, p1.cluster==1)
View(df10)
View(df9)
View(df8)
View(df7)
View(df6)
View(df5)
View(df4)
View(df3)
View(df2)
View(df1)
p3
p3 + geom_strip('p9.C4','p25.A12', barsize = 2, color= 'blue', label = "Other Pseudomonads", offset = 80, offset.text=1)
p3 + geom_strip('p9.C4','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
View(all_df_matrix)
p3 + geom_strip('p25.A11','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p26.D6','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p25.D2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p26.F9','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p25.C11','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p26.F9','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p25.B1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p24.C5','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p25.B2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
View(df1)
p3 + geom_strip('p11.H5','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p26.C9','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p2.C11','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p27.C5','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p4.H5','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p11.G5','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p1.H8','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p2.G6','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p2.H6','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p8.H2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p4.H1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p23.A4','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p2.G5','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p23.E5','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p5.A5','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p12.C11','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p1.G12','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p8.H1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p26.C10','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p6.G1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p8.G1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p4.A8','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p11.H1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p2.H1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p8.G5','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p6.G6','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p4.G1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p2.G5','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p8.G4','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p11.G1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p4.H6','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p13.B4','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p8.H6','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p7.F2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p4.G6','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p9.H10','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p11.F9','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p23.F4','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p8.H5','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p6.G2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p13.B5','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p13.F3','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p4.F3','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p24.G2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p21.H10','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p3.B9','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p8.F1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p1.A5','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
write.csv(df10, "./subcluster10_list.csv")
write.csv(df9, "./subcluster9_list.csv")
write.csv(df8, "./subcluster8_list.csv")
write.csv(df7, "./subcluster7_list.csv")
write.csv(df6, "./subcluster6_list.csv")
write.csv(df5, "./subcluster5_list.csv")
write.csv(df4, "./subcluster4_list.csv")
write.csv(df3, "./subcluster3_list.csv")
write.csv(df2, "./subcluster2_list.csv")
write.csv(df1, "./subcluster1_list.csv")
View(df3)
df1 <- subset(fragmented_cluster_info, p1.cluster==1)
write.csv(df1, "./subcluster1_list.csv")
View(fragmented_cluster_info)
df10 <- subset(fragmented_cluster_info, p1.cluster==10)
df9 <- subset(fragmented_cluster_info, p1.cluster==9)
df8 <- subset(fragmented_cluster_info, p1.cluster==8)
df7 <- subset(fragmented_cluster_info, p1.cluster==7)
df6 <- subset(fragmented_cluster_info, p1.cluster==6)
df5 <- subset(fragmented_cluster_info, p1.cluster==5)
df4 <- subset(fragmented_cluster_info, p1.cluster==4)
df3 <- subset(fragmented_cluster_info, p1.cluster==3)
df2 <- subset(fragmented_cluster_info, p1.cluster==2)
df1 <- subset(fragmented_cluster_info, p1.cluster==1)
write.csv(df10, "./10_list.csv")
write.csv(df9, "./9_list.csv")
write.csv(df8, "./8_list.csv")
write.csv(df7, "./7_list.csv")
write.csv(df6, "./6_list.csv")
write.csv(df5, "./5_list.csv")
write.csv(df4, "./4_list.csv")
write.csv(df3, "./3_list.csv")
write.csv(df2, "./2_list.csv")
write.csv(df1, "./1_list.csv")
p3 + geom_strip('p13.F3','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p21.H10','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p12.A1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
View(df)
View(fragmented_cluster_info)
View(clusters)
View(all_df)
p3 + geom_strip('p7.C4','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p1.D9','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p23.C2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p1.B8','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p5.F6','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p9.B12','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p9.D12','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p8.H4','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p12.H10','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p8.A11','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p24.C8','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p20.F8','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p11.G8','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p11.E8','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p27.B7','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p21.E1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p22.G2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p3.A12','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p20.D11','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p24.D2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p25.A8','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p26.G1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p5.F10','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p25.A11','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p20.C10','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p6.B9','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p13.E2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p20.D1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p20.H2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p4.G4','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p20.H2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p25.D2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p13.D6','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p25.G10','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p2.H1','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p25.C11','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
# load libraries
library(cluster)
library(NbClust)
library(clustertend)
library(factoextra)
library(stats)
library(ape)
library(phytools)
library(ggplot2)
library(ggtree)
library(tidyverse)
library(dplyr)
library(BBmisc)
# set the seed
set.seed(123)
# load and tidy phage data from mash
tbl <- read.table("./mash_cluster2_results",header=FALSE,row.names=1)
colnames(tbl) <- rownames(tbl)
# plot k-means using 2 clusters (from elbow method)
tbl2 <- as.matrix(tbl)
# load libraries
library(cluster)
library(NbClust)
library(clustertend)
library(factoextra)
library(stats)
library(ape)
library(phytools)
library(ggplot2)
library(ggtree)
library(tidyverse)
library(dplyr)
library(BBmisc)
# set the seed
set.seed(123)
# load and tidy phage data from mash
tbl <- read.table("./mash_cluster2_results",header=FALSE,row.names=1)
colnames(tbl) <- rownames(tbl)
# plot k-means using 2 clusters (from elbow method)
tbl2 <- as.matrix(tbl)
# plot k-means using 10 clusters (from gap statistic)
p1 <- kmeans(tbl2, 10)
fviz_cluster(p1, data = tbl2, geom="point")
# load in the pseudomonas OTU5 phylogeny
treex2 <- read.tree(file="./ps_1524_uncollapsed_5_2018.nwk")
# cleaning the cluster data
# make p1 into a data frame to see if we can map the values to a phylogeny
clusters <- data.frame(p1$cluster)
fragmented_cluster_info <- data.frame(p1$cluster)
clusters$genome_ID <- row.names(clusters)
clusters[] <- lapply(clusters, gsub, pattern='late', replacement='')
clusters$genome_ID <- gsub("^.{0,4}", "", clusters$genome_ID)
clusters[] <- lapply(clusters, gsub, pattern='.pilon.contigs_renamed.phages_lysogenic.fas', replacement='')
rownames(clusters) <- NULL
clusters <- clusters[,c(2,1)]
# Add a column to clusters: Phage #
clusters['phages'] <- NA
df <- clusters %>% group_by(genome_ID) %>% dplyr::mutate(phages = row_number())
# analysis of phage data
# find largest # of phages in column phages
max(df$phages) # 8 is the maximum number of phages
ggplot(df, aes(x=phages)) + geom_histogram() + ggtitle("Phage distribution")
# cleaning the cluster data
# subset df based off phages column, rename their cluster column
df1 <- subset(df, phages == 1) #1582
names(df1)[2] <- "phage1"
df2 <- subset(df, phages == 2) # 884
names(df2)[2] <- "phage2"
# see how many times we see each genome_ID
#table(df$genome_ID)
# cleaning the tree
# remove rows in treex2 that aren't in df1 since that will have all genomes we need
uneeded <- which(!(treex2$tip.label) %in% df1$genome_ID)
length(uneeded)
tree <- drop.tip(treex2, uneeded)
# make comprehensive phage clustering dataframe with the corresponding genome as rownames
# make all 15 dataframes 1510 observations long but with NA in places that don't have values
all_df <- merge(df1, df2, by="genome_ID", all=TRUE)
# convert to matrix
all_df_matrix <- as.matrix(all_df)
rownames(all_df_matrix) <- all_df_matrix[,1]
all_df_matrix <- all_df_matrix[ ,c(2,4)]
#write.csv(all_df_matrix, "./lysogenic_ffn/lysogenic_circos_table.csv")
################################################################
############### plot clusters to phylogeny #####################
################################################################
p <- ggtree(tree, layout='circular', branch.length='none')
p
p3 <- gheatmap(p, all_df_matrix, colnames = FALSE, legend_title = "Cluster")
p3
#\p3 + geom_strip('p9.C4','p4.C6', barsize = 2, color= 'blue', label = "Other Pseudomonads", offset = 80, offset.text=1) +
#geom_strip('p27.D6','p9.E8', barsize=2, color='purple',label='OTU5', offset=80, offset.text=1)
p3 + geom_strip('p1.G12','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p4.G6','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p7.F2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p4.H6','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p6.G6','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p4.A8','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p1.G12','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p12.C11','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p4.G6','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
p3 + geom_strip('p7.F2','p25.A12', barsize = 2, color= 'blue', label = "test", offset = 80, offset.text=1)
# Analyzing each cluster separately
# Preparing the data for analysis
# subset each cluster to its own dataframe
df10 <- subset(fragmented_cluster_info, p1.cluster==10)
df9 <- subset(fragmented_cluster_info, p1.cluster==9)
df8 <- subset(fragmented_cluster_info, p1.cluster==8)
df7 <- subset(fragmented_cluster_info, p1.cluster==7)
df6 <- subset(fragmented_cluster_info, p1.cluster==6)
df5 <- subset(fragmented_cluster_info, p1.cluster==5)
df4 <- subset(fragmented_cluster_info, p1.cluster==4)
df3 <- subset(fragmented_cluster_info, p1.cluster==3)
df2 <- subset(fragmented_cluster_info, p1.cluster==2)
df1 <- subset(fragmented_cluster_info, p1.cluster==1)
write.csv(df10, "./10_list.csv")
write.csv(df9, "./9_list.csv")
write.csv(df8, "./8_list.csv")
write.csv(df7, "./7_list.csv")
write.csv(df6, "./6_list.csv")
write.csv(df5, "./5_list.csv")
write.csv(df4, "./4_list.csv")
write.csv(df3, "./3_list.csv")
write.csv(df2, "./2_list.csv")
write.csv(df1, "./1_list.csv")
# subset each mash distance matrix to its own cluster
df1.1 <- tbl[rownames(tbl) %in% rownames(df1), rownames(tbl) %in% rownames(df1)]
df2.1 <- tbl[rownames(tbl) %in% rownames(df2), rownames(tbl) %in% rownames(df2)]
df3.1 <- tbl[rownames(tbl) %in% rownames(df3), rownames(tbl) %in% rownames(df3)]
df4.1 <- tbl[rownames(tbl) %in% rownames(df4), rownames(tbl) %in% rownames(df4)]
# convert to data matrix
df1.1 <- as.matrix(df1.1)
df2.1 <- as.matrix(df2.1)
df3.1 <- as.matrix(df3.1)
df4.1 <- as.matrix(df4.1)
# heatmaps
# visualize the mash distance within a cluster
image(df1.1)
image(df2.1)
image(df3.1)
image(df4.1)
